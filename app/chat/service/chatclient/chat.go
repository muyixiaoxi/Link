// Code generated by goctl. DO NOT EDIT.
// Source: chat.proto

package chatclient

import (
	"context"

	"chat/service/chat"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty                    = chat.Empty
	GetOfflineMessageRequest = chat.GetOfflineMessageRequest
	Message                  = chat.Message
	Messages                 = chat.Messages
	SaveMessageRequest       = chat.SaveMessageRequest

	Chat interface {
		SaveOfflineMessage(ctx context.Context, in *SaveMessageRequest, opts ...grpc.CallOption) (*Empty, error)
		GetOfflineMessage(ctx context.Context, in *GetOfflineMessageRequest, opts ...grpc.CallOption) (*Messages, error)
	}

	defaultChat struct {
		cli zrpc.Client
	}
)

func NewChat(cli zrpc.Client) Chat {
	return &defaultChat{
		cli: cli,
	}
}

func (m *defaultChat) SaveOfflineMessage(ctx context.Context, in *SaveMessageRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := chat.NewChatClient(m.cli.Conn())
	return client.SaveOfflineMessage(ctx, in, opts...)
}

func (m *defaultChat) GetOfflineMessage(ctx context.Context, in *GetOfflineMessageRequest, opts ...grpc.CallOption) (*Messages, error) {
	client := chat.NewChatClient(m.cli.Conn())
	return client.GetOfflineMessage(ctx, in, opts...)
}
