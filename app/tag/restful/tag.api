syntax = "v1"

type CreateTagRequest {
	TagName   string `json:"tagName"`
	groupName string `json:"groupName"`
	Type      string `json:"type"`
}

type CreateTagResponse {
	GroupName    string         `json:"groupName"`
	TagGroupName []TagGroupName `json:"tagGroupName"`
}

type TagGroupName {
	GroupNameId int    `json:"groupNameId"`
	Creator     int    `json:"creator"`
	GroupName   string `json:"groupName"`
}

type selectUserTagByGroupRequest {
	GroupName string `json:"groupName" validate:"required"`
}

type Tag {
	TagId     uint64 `json:"tagId"`
	CreatorId uint64 `json:"creatorId"`
	TagName   string `json:"groupName"`
}

type selectUserTagByGroupResponse {
	GroupName string `json:"groupName"`
	Tags      []Tag  `json:"tags"`
}

type updateSelfTagRequest {
	GroupName string `json:"groupName" validate:"required"`
	TagName   string `json:"tagName" validate:"required"`
	OldName   string `json:"oldName" validate:"required"`
}

type delteTags {
	TagIds []uint64 `json:"tagIds" validate:"required"`
}

@server (
	prefix: /app/tag
	jwt:    Auth
	group:  tagLogin
)
service tag-api {
	@doc "创建用户自定义标签"
	@handler createTag
	post /createTag (CreateTagRequest) returns (CreateTagResponse)

	@handler selectUserTagByGroup
	post /selectUserTagByGroup (selectUserTagByGroupRequest) returns (selectUserTagByGroupResponse)

	@handler updateSelfTag
	post /updateSelfTag (updateSelfTagRequest)

	@handler deleteTags
	post /deleteTag (delteTags)
}

@server (
	prefix: /app/tag
	group:  systmeTag
)
service tag-api {
	@doc "查看系统标签"
	@handler selectGroupTag
	post /selectGroupTag returns ([]TagGroupName)
}

// goctl api go -api restful/tag/tag.api -dir restful/tag
