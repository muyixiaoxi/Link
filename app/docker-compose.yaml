#version: '3'
#
#networks:
#  backend:
#    driver: bridge
#
#
######### 项目依赖的环境，启动项目之前要先启动此环境 #######
#services:
#  etcd:
#    build:
#      context: etcd
#    environment:
#      - TZ=Asia/Shanghai
#      - ALLOW_NONE_AUTHENTICATION=yes
#      - ETCD_ADVERTISE_CLIENT_URLS=http://114.55.135.211:2379
#    ports: # 设置端口映射
#      - "2379:2379"
#    networks:
#      - backend
#    restart: always
#  etcd-manage:
#    build:
#      context: etcd-manage
#    environment:
#      - TZ=Asia/Shanghai
#    ports:
#      - "7000:8080"                    # 设置容器8080端口映射指定宿主机端口，用于宿主机访问可视化web
#    depends_on:                                       # 依赖容器
#      - etcd                                          # 在 etcd 服务容器启动后启动
#    networks:
#      - backend
#    restart: always
#  # 服务发现
#  tag-rpc: #自定义容器名称
#    image: tag-rpc:0.0.1
#    container_name: tag-rpc
#    restart: always
#    environment: #设置环境变量
#      - TZ=Asia/Shanghai
#    privileged: true
#    ports: #设置端口映射
#      - "8081:8081"
#    networks:
#      - backend
#
#  user-rpc: #自定义容器名称
#    image: user-rpc:0.0.1
#    container_name: user-rpc
#    restart: always
#    environment: #设置环境变量
#      - TZ=Asia/Shanghai
#    privileged: true
#    ports: #设置端口映射
#      - "8082:8082"
#    networks:
#      - backend
#
#  tag-api: #自定义容器名称
#    image: tag-api:0.0.1
#    container_name: tag-api
#    restart: always
#    environment: #设置环境变量
#      - TZ=Asia/Shanghai
#    privileged: true
#    ports: #设置端口映射
#      - "8888:8888"
#    networks:
#      - backend
#
#  user-api: #自定义容器名称
#    image: user-api:0.0.1
#    container_name: user-api
#    restart: always
#    environment: #设置环境变量
#      - TZ=Asia/Shanghai
#    privileged: true
#    ports: #设置端口映射
#      - "8887:8887"
#    networks:
#      - backend

version: '3'

networks:
  backend:
    driver: bridge


######## 项目依赖的环境，启动项目之前要先启动此环境 #######
services:
  etcd:
    build:
      context: etcd
    environment:
      - TZ=Asia/Shanghai
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://114.55.135.211:2379
    ports: # 设置端口映射
      - "2379:2379"
    networks:
      - backend
    restart: always
  dtm:
    build:
      context: ./dtm
    environment:
      - TZ=Asia/Shanghai
    entrypoint:
      - "/app/dtm/dtm"
      - "-c=/app/dtm/configs/config.yaml"
    privileged: true
    volumes:
      - ./dtm/config.yml:/app/dtm/configs/config.yaml # 将 dtm 配置文件挂载到容器里
    ports:
      - "36789:36789"
      - "36790:36790"
    networks:
      - backend
    restart: always
    depends_on:
      - etcd
  # 服务发现
  tag-rpc: #自定义容器名称
    build:
      context: tag
      dockerfile: service/Dockerfile
    container_name: tag-rpc
    restart: always
    environment: #设置环境变量
      - TZ=Asia/Shanghai
    privileged: true
    ports: #设置端口映射
      - "8081:8081"
    networks:
      - backend
    depends_on:
      - etcd
      - dtm

  user-rpc: #自定义容器名称
    build:
      context: user
      dockerfile: service/Dockerfile
    container_name: user-rpc
    restart: always
    environment: #设置环境变量
      - TZ=Asia/Shanghai
    privileged: true
    ports: #设置端口映射
      - "8082:8082"
    networks:
      - backend
    depends_on:
      - etcd
      - dtm

  chat-rpc:
    build:
      context: chat
      dockerfile: service/Dockerfile
    container_name: chat-rpc
    restart: always
    environment:
      - TZ=Asia/Shanghai
    privileged: true
    ports:
      - "8083:8083"
    networks:
      - backend
    depends_on:
      - etcd
      - dtm

  tag-api: #自定义容器名称
    build:
      context: tag
      dockerfile: restful/Dockerfile
    container_name: tag-api
    restart: always
    environment: #设置环境变量
      - TZ=Asia/Shanghai
    privileged: true
    ports: #设置端口映射
      - "8888:8888"
    networks:
      - backend
    depends_on:
      - etcd
      - dtm

  user-api: #自定义容器名称
    build:
      context: user
      dockerfile: restful/Dockerfile
    container_name: user-api
    restart: always
    environment: #设置环境变量
      - TZ=Asia/Shanghai
    privileged: true
    ports: #设置端口映射
      - "8887:8887"
    networks:
      - backend
    depends_on:
      - etcd
      - dtm

  transmit:
    build:
      context: transmit
      dockerfile: Dockerfile
    container_name: transmit
    restart: always
    environment:
      - TZ=Asia/Shanghai
    privileged: true
    ports:
      - "8333:8333"
    networks:
      - backend

  chat-api:
    build:
      context: chat
      dockerfile: restful/Dockerfile
    container_name: chat-api
    restart: always
    environment:
      - TZ=Asia/Shanghai
    privileged: true
    ports:
      - "8889:8889"
    networks:
      - backend
    depends_on:
      - etcd
      - dtm
      - transmit

  chat-api-b:
    build:
      context: chat
      dockerfile: restfulB/Dockerfile
    container_name: chat-api-b
    restart: always
    environment:
      - TZ=Asia/Shanghai
    privileged: true
    ports:
      - "8900:8900"
    networks:
      - backend
    depends_on:
      - etcd
      - dtm
      - transmit
