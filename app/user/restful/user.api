syntax = "v1"

type UserCreateRequest {
	Username   string `json:"username"`
	Password   string `json:"password"`
	Avatar     string `json:"avatar"`
	Phone      string `json:"phone"`
	StartTagId uint64 `json:"startTagId"`
}

type UserCreateResponse {
	Token    string `json:"token"`
	Username string `json:"username"`
	Avatar   string `json:"avatar"`
}

type UserLoginRequest {
	Phone    string `json:"phone"`
	Password string `json:"password"`
}

type UserLoginResponse {
	Token    string `json:"token"`
	Id       uint64 `json:"id"`
	Username string `json:"username"`
	Avatar   string `json:"avatar"`
}

type UserInfoRequest {
	Id uint64 `path:"id"`
}

type UserInfoResponse {
	Id        uint   `json:"id"`
	Username  string `json:"username"`
	Avatar    string `json:"avatar"`
	Age       uint   `json:"age"`
	Gender    uint   `json:"gender"`
	Address   string `json:"address"`
	Phone     string `json:"phone"`
	Signature string `json:"signature"`
	IsFriend  bool   `json:"isFriend"`
	Remark    string `json:"remark"`
}

type UserUpdateInfoRequest {
	Username  string `json:"username"`
	Password  string `json:"password,optional"`
	Avatar    string `json:"avatar"`
	Age       uint   `json:"age"`
	Gender    uint   `json:"gender"`
	Address   string `json:"address"`
	Phone     string `json:"phone"`
	Signature string `json:"signature"`
}

type UserUpdateRemarkRequest {
	Friend uint64 `json:"friend"`
	Remark string `json:"remark"`
}

type UserFlowedRequest {
	BeId    uint64 `json:"beId"`
	Message string `json:"message"`
	Type    uint64 `json:"type"`
}

//创建群聊 start
type UserCreateGroupRequset {
	SystemTagId   uint64 `json:"systemTagId" validate:"required"`
	UserSelfTagId uint64 `json:"userSelfTagId" validate:"required"`
	Name          string `json:"name" validate:"required"`
	Avatar        string `json:"avatar"`
}

type DisposeFlowedRequest {
	From   uint64 `json:"from"`
	To     uint64 `json:"to"`
	Type   uint32 `json:"type"`
	Remark string `json:"remark,optional"`
	Res    bool   `json:"res"`
}

type UserAppleRequest {
	From    uint64 `json:"from,optional"`
	To      uint64 `json:"to"`
	Type    uint8  `json:"type"`
	Content string `json:"content"`
	Remark  string `json:"remark"`
}

type Message {
	From         uint64 `json:"from,optional"`
	To           uint64 `json:"to"`
	Type         uint8  `json:"type"`
	Time         string `json:"time"`
	Content      string `json:"content"`
	FromAvatar   string `json:"fromAvatar"`
	FromUsername string `json:"fromUsername"`
}

// 用户选择标签 Request
type UserChooseTagRequst {
	SystemTagId uint64   `json:"systemTagId" validate:"required"'`
	TagIds      []uint64 `json:"tagIds" validate:"required,max=3"`
}

// 查询当前登录用户相关的标签 Response
type QueryLink {
	Id        uint64 `json:"id"` //标签id
	CreatorId uint64 `json:"creatorId"` //创作者id
	TagName   string `json:"tagName"` //标签名称
}

type QueryLinkTagsResponse {
	SystemTagName string      `json:"systemTagName"`
	SystemTagId   uint64      `json:"systemTagId"`
	LinkTags      []QueryLink `json:"linkTags"`
}

type UserFriendsResponse {
	Friends []UserFriend `json:"friends"`
}

type UserFriend {
	Id        uint64   `json:"id"`
	Username  string   `json:"username"`
	Avatar    string   `json:"avatar"`
	Remark    string   `json:"remark"`
	Signature string   `json:"signature"`
	Type      uint64   `json:"type"`
	TagName   []string `json:"tagName"`
}

type UserQueryPhoneResponse {
	Id        uint64   `json:"id"`
	Type      uint64   `json:"type"`
	Username  string   `json:"username"`
	Avatar    string   `json:"avatar"`
	Address   string   `json:"address"`
	Signature string   `json:"signature"`
	TagName   []string `json:"tagName"`
}

type UserQueryFriendRequest {
	Param string `json:"param"`
}

type UserQueryPhoneRequest {
	Phone string `json:"phone"`
}

type UserDeleteFriendRequest {
	UserId   uint64 `json:"userId,optional"`
	FriendId uint64 `json:"friendId"`
}

type UserApplyForResponse {
	UserId    uint64 `json:"userId"`
	Username  string `json:"username"`
	Avatar    string `json:"avatar"`
	BeId      uint64 `json:"beId"`
	Message   string `json:"message"`
	Type      uint64 `json:"type"`
	Result    bool   `json:"result"`
	UpdatedAt string `json:"updatedAt"`
	GroupName string `json:"groupName"`
}

@server (
	prefix: /app/user
)
service user {
	@doc "注册"
	@handler signUp
	post / (UserCreateRequest) returns (UserCreateResponse)

	@doc "登录"
	@handler login
	post /login (UserLoginRequest) returns (UserLoginResponse)

	@doc "chat 连接"
	@handler chatWS
	get /chat
}

@server (
	prefix: /app/user
	jwt:    Auth
)
service user {
	@doc "获取用户信息"
	@handler getUserInfo
	get /:id (UserInfoRequest) returns (UserInfoResponse)

	@doc "修改用户信息"
	@handler updateUserInfo
	put / (UserUpdateInfoRequest)

	@doc "修改备注"
	@handler updateRemark
	put /remark (UserUpdateRemarkRequest)

	@doc "添加好友/群聊"
	@handler addFlowed
	post /flowed (UserAppleRequest)

	@doc "处理好友/群聊申请"
	@handler disposeFlowed
	post /flowed/dispose (DisposeFlowedRequest)

	@doc "获取好友列表"
	@handler GetFriendsList
	get /friends returns (UserFriendsResponse)

	@doc "搜索好友"
	@handler QueryFriends
	post /friends/query (UserQueryFriendRequest) returns (UserFriendsResponse)

	@doc "根据手机号搜索"
	@handler QueryPhone
	post /query/phone (UserQueryPhoneRequest) returns (UserQueryPhoneResponse)

	@doc "删除好友"
	@handler DeleteFriend
	delete /friend (UserDeleteFriendRequest)

	@doc "好友申请列表"
	@handler GetApplyFor
	get /apply returns ([]UserApplyForResponse)
}

//首页根据标签推荐群聊
type RecommendGroupByTagRequest {
	PageNo   uint64   `json:"pageNo" validate:"required"`
	PageSize uint64   `json:"pageSize" validate:"required"`
	TagIds   []uint64 `json:"tagIds" validate:"max=5"` //标签id
}

type GroupList {
	Id              uint64 `json:"id"` //群id
	Type            uint64 `json:"type"` //type类型 2 表示群聊
	Name            string `json:"name"` //群聊名称
	SystemTagName   string `json:"systemTagName"` //群聊所带的系统标签名称
	UserSelfTagName string `json:"userSelfTagName"` //用户自定义标签
	Avatar          string `json:"avatar"` //用户头像
	Remark          string `json:"remark"` //群聊备注
}

type RecommendGroupByTagResponse {
	GroupList []GroupList `json:"groupList"`
	Total     int64       `json:"total"`
}

//首页根据标签推荐群聊
//首页根据标签推荐人员列表
type RecommendUser {
	Id        uint64 `json:"id"` //人员Id
	Username  string `json:"username"` //用户名
	Avatar    string `json:"avatar"` //用户头像
	Signature string `json:"signature"` //个性签名
	Type      uint64 `json:"type"`
}

type RecommendUserListResponse {
	RecommendUserList []RecommendUser `json:"recommendUserList"`
	Total             int64           `json:"total"`
}

//首页根据标签推荐人员列表
//查询群详情
type SelectGroupDeatilRequest {
	ID uint64 `json:"id" validate:"required"`
}

type SelectGroupDeatilResponse {
	ID              uint64  `json:"id"`
	Count           uint64  `json:"count"`
	GroupBossId     uint64  `json:"groupBossId"`
	Name            string  `json:"name"`
	UserSelfTagName string  `json:"userSelfTagName"`
	Avatar          string  `json:"avatar"`
	CreatedAt       string  `json:"createdAt"`
	SystemTagName   string  `json:"systemTagName"`
	Man             float32 `json:"man"`
	WoMan           float32 `json:"woMan"`
	Address         string  `json:"address"`
	AddressCount    float32 `json:"addressCount"`
	IsExist         bool    `json:"isExist"`
}

//查询群详情
//退出群聊 解散群聊
type QuitGroupRequest {
	GroupId uint64 `json:"groupId" validate:"required"`
}

//退出群聊 解散群聊
//查询群聊列表中的人员信息
type GroupUserListRequest {
	GroupID uint64 `json:"groupId" validate:"required"` //群聊id
}

type GroupUserList {
	ID       uint64 `json:"id"`
	Avatar   string `json:"avatar"`
	UserName string `json:"userName"`
}

type GroupUserListResponse {
	GroupBossId   uint64          `json:"groupBossId"`
	GroupUserList []GroupUserList `json:"groupUserList"`
}

//查询群聊列表中的人员信息
//踢出群聊
type KickOutGroupRequest {
	GroupId uint64   `json:"groupId"` //群id
	UserIDs []uint64 `json:"userIDs" validate:"required"` //被踢出群聊的人员id
}

//踢出群聊
//修改群聊信息
type UpdateGroupInfoRequest {
	GroupId       uint64 `json:"groupId" validate:"required"` //群聊id
	SystemTagId   uint64 `json:"systemTagId"` //系统标签
	UserSelfTagId uint64 `json:"userSelfTagId"` //用户自定义标签
	Name          string `json:"name"` //群聊名称
	Avatar        string `json:"avatar"` //群头像
}

//修改群聊信息
// 获取群聊列表
type QueryGroupListRequest {
	PageNo   uint64 `json:"pageNo" validate:"required"`
	PageSize uint64 `json:"pageSize" validate:"required"`
}

// 获取群聊列表
//修改当前登录用户对此群聊的备注
type UpdateGroupRemarkRequest {
	GroupId uint64 `json:"groupId" validate:"required"`
	Remark  string `json:"remark" validate:"required"`
}

//修改当前登录用户对此群聊的备注
//取消选择标签
type CancelRequest {
	TagIds []uint64 `json:"tagIds" validate:"required"`
}

//用户搜索自己未加入的群聊
type SelectStrangerRequest {
	PageNo   uint64 `json:"pageNo" validate:"required"`
	PageSize uint64 `json:"pageSize" validate:"required"`
	Name     string `json:"name" validate:"required"`
}

type SelectMyGroupRequest {
	Name string `json:"name" validate:"required"`
}

//用户搜索自己未加入的群聊
@server (
	prefix: /app/user
	jwt:    Auth
	group:  userGroup
)
service user {
	@doc "用户创建群聊"
	@handler userCreateGroup
	post /createGroup (UserCreateGroupRequset)

	@doc "首页推荐群聊"
	@handler homeGroup
	post /selectHomeGroup (RecommendGroupByTagRequest) returns (RecommendGroupByTagResponse)

	@doc "查询群聊详情"
	@handler selectDetailGroup
	post /selectDeatilGroup (SelectGroupDeatilRequest) returns (SelectGroupDeatilResponse)

	@doc "解散或退出群聊"
	@handler quitGroup
	post /quitGroup (QuitGroupRequest)

	@doc "查询群聊中的人员列表"
	@handler GroupUserList
	post /groupUserList (GroupUserListRequest) returns (GroupUserListResponse)

	@doc "踢出群聊"
	@handler kickOutUser
	post /kickOut (KickOutGroupRequest)

	@doc "修改群聊信息"
	@handler updateGroupInfo
	post /updateGroupInfo (UpdateGroupInfoRequest) returns (SelectGroupDeatilResponse)

	@doc "修改当前用户对此群聊的备注"
	@handler updateGroupRemark
	post /updateGroupRemark (UpdateGroupRemarkRequest)

	@doc "获取当前登录用户群聊列表"
	@handler queryGroupList
	post /queryGroupList (QueryGroupListRequest) returns (RecommendGroupByTagResponse)

	@doc "用户搜索自己未加入的群聊"
	@handler selectStrangerGroup
	post /selectStrangerGroup (SelectStrangerRequest) returns (RecommendGroupByTagResponse)

	@doc "用户搜索自己加入的群聊"
	@handler selectMyGroup
	post /selectMyGroup (SelectMyGroupRequest) returns ([]GroupList)
}

@server (
	prefix: /app/user
	jwt:    Auth
	group:  userTag
)
service user {
	@doc "用户选择标签"
	@handler userChooseTag
	post /chooseTag (UserChooseTagRequst)

	@doc "查询和当前登录用户或者其它用户相关的标签"
	@handler queryLinkTags
	get /queryLinkTags/:id (UserInfoRequest) returns ([]QueryLinkTagsResponse)

	@doc "根据标签推荐人员列表"
	@handler recommendUserList
	post /recommendUserList (RecommendGroupByTagRequest) returns (RecommendUserListResponse)

	@doc "用户取消选择标签"
	@handler cancelTag
	post /cancelTag (CancelRequest)
}

// goctl api go -api user.api -dir .
