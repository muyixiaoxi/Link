syntax = "v1"

type UserCreateRequest {
	Username   string `json:"username"`
	Password   string `json:"password"`
	Avatar     string `json:"avatar"`
	Phone      string `json:"phone"`
	StartTagId uint64 `json:"startTagId"`
}

type UserCreateResponse {
	Token    string `json:"token"`
	Username string `json:"username"`
	Avatar   string `json:"avatar"`
}

type UserLoginRequest {
	Username string `json:"username"`
	Password string `json:"password"`
}

type UserLoginResponse {
	Token    string `json:"token"`
	Id       uint64 `json:"id"`
	Username string `json:"username"`
	Avatar   string `json:"avatar"`
}

type UserInfoRequest {
	Id uint `path:"id"`
}

type UserInfoResponse {
	Id        uint   `json:"id"`
	Username  string `json:"username"`
	Avatar    string `json:"avatar"`
	Age       uint   `json:"age"`
	Gender    string `json:"gender"`
	Address   string `json:"address"`
	Phone     string `json:"phone"`
	Signature string `json:"signature"`
}

type UserUpdateInfoRequest {
	Username  string `json:"username"`
	Password  string `json:"password"`
	Avatar    string `json:"avatar"`
	Age       uint   `json:"age"`
	Gender    uint   `json:"gender"`
	Address   string `json:"address"`
	Phone     string `json:"phone"`
	Signature string `json:"signature"`
}

type UserUpdateRemarkRequest {
	Friend uint64 `json:"friend"`
	Remark string `json:"remark"`
}

type UserFlowedRequest {
	BeId    uint64 `json:"beId"`
	Message string `json:"message"`
	Type    uint64 `json:"type"`
}

//创建群聊 start
type UserCreateGroupRequset {
	GroupBossId   uint64 `json:"groupBossId" validate:"required"`
	SystemTagId   uint64 `json:"systemTagId" validate:"required"`
	UserSelfTagId uint64 `json:"userSelfTagId" validate:"required"`
	Name          string `json:"name" validate:"required"`
	Avatar        string `json:"avatar"`
}

<<<<<<< HEAD
type DisposeFlowedRequest {
	From   uint64 `json:"id"`
	To     uint64 `json:"to"`
	Type   uint32 `json:"type"`
	Remark string `json:"remark,optional"`
	Res    bool   `json:"res"`
=======
//创建群聊 end
type DisposeFlowedRequest {
	From uint64 `json:"id"`
	To   uint64 `json:"to"`
	Type uint8  `json:"type"`
	Res  bool   `json:"res"`
>>>>>>> 9fd9970c0aa7e4eb8b8ecc053a2b23c1bb010967
}

type Message {
	From    uint64 `json:"from,optional"`
	To      uint64 `json:"to"`
	Type    uint8  `json:"type"`
	Time    string `json:"time"`
	Content string `json:"content"`
}

// 用户选择标签 Request
type UserChooseTagRequst {
	SystemTagId uint64   `json:"systemTagId" validate:"required"'`
	TagIds      []uint64 `json:"tagIds" validate:"required,max=3"`
}

// 查询当前登录用户相关的标签 Response
type QueryLink {
	Id        uint64 `json:"id"` //标签id
	CreatorId uint64 `json:"creatorId"` //创作者id
	TagName   string `json:"tagName"` //标签名称
}

type QueryLinkTagsResponse {
	LinkTags []QueryLink `json:"linkTags"`
}

@server (
	prefix: /app/user
)
service user {
	@doc "注册"
	@handler signUp
	post / (UserCreateRequest) returns (UserCreateResponse)

	@doc "登录"
	@handler login
	post /login (UserLoginRequest) returns (UserLoginResponse)

	@doc "chat 连接"
	@handler chatWS
	get /chat
}

@server (
	prefix: /app/user
	jwt:    Auth
)
service user {
	@doc "获取用户信息"
	@handler getUserInfo
	get /:id (UserInfoRequest) returns (UserInfoResponse)

	@doc "修改用户信息"
	@handler updateUserInfo
	put / (UserUpdateInfoRequest)

	@doc "修改备注"
	@handler updateRemark
	put /remark (UserUpdateRemarkRequest)

	@doc "添加好友/群聊"
	@handler addFlowed
	post /flowed (Message)

	@doc "处理好友/群聊申请"
	@handler disposeFlowed
<<<<<<< HEAD
	post /flowed/dispose (DisposeFlowedRequest)
=======
	delete /flowed (DisposeFlowedRequest)
>>>>>>> 9fd9970c0aa7e4eb8b8ecc053a2b23c1bb010967
}

@server (
	prefix: /app/user
	jwt:    Auth
	group:  userGroup
)
service user {
	@doc "用户创建群聊"
	@handler userCreateGroup
	post /createGroup (UserCreateGroupRequset)
}

@server (
	prefix: /app/user
	jwt:    Auth
	group:  userTag
)
service user {
	@doc "用户选择标签"
	@handler userChooseTag
	post /chooseTag (UserChooseTagRequst)

	@doc "查询和当前登录用户相关的标签"
	@handler queryLinkTags
	post /queryLinkTags returns (QueryLinkTagsResponse)
}

// goctl api go -api user.api -dir .
