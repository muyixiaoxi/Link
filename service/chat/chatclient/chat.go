// Code generated by goctl. DO NOT EDIT.
// Source: chat.proto

package chatclient

import (
	"context"

	"Link/service/chat/chat"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = chat.Request
	Response = chat.Response

	Chat interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultChat struct {
		cli zrpc.Client
	}
)

func NewChat(cli zrpc.Client) Chat {
	return &defaultChat{
		cli: cli,
	}
}

func (m *defaultChat) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := chat.NewChatClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
