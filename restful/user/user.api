syntax = "v1"

type UserCreateRequest {
	Username   string `json:"username"`
	Password   string `json:"password"`
	Avatar     string `json:"avatar"`
	Phone      string `json:"phone"`
	StartTagId uint64 `json:"startTagId"`
}
type UserCreateResponse {
	Token    string `json:"token"`
	Username string `json:"username"`
	Avatar   string `json:"avatar"`
}

type UserLoginRequest {
	Username string `json:"username"`
	Password string `json:"password"`
}
type UserLoginResponse {
	Token    string `json:"token"`
	Username string `json:"username"`
	Avatar   string `json:"avatar"`
}

type UserInfoRequest {
	Id uint `json:"id"`
}
type UserInfoResponse {
	Id       uint   `json:"id"`
	Username string `json:"username"`
	Avatar   string `json:"avatar"`
	Age      uint   `json:"age"`
	Gender   string `json:"gender"`
	Address  string `json:"address"`
	Phone    string `json:"phone"`
}

type UserUpdateInfoRequest {
	Username string `json:"username"`
	Password string `json:"password"`
	Avatar   string `json:"avatar"`
	Age      uint   `json:"age"`
	Gender   uint   `json:"gender"`
	Address  string `json:"address"`
	Phone    string `json:"phone"`
}

@server(
	prefix: /app/user
)
service user {
	@doc "注册"
	@handler signUp
	post / (UserCreateRequest) returns(UserCreateResponse)

	@doc "登录"
	@handler login
	post /login (UserLoginRequest) returns(UserLoginResponse)
}

@server (
	prefix:/app/user
	jwt: Auth
)
service user {
	@doc "获取用户信息"
	@handler GetUserInfo
	get / (UserInfoRequest) returns (UserInfoResponse)

	@doc "修改用户信息"
	@handler UpdateUserInfo
	put / (UserUpdateInfoRequest)
}

// goctl api go -api user.api -dir .